[gd_scene load_steps=39 format=2]

[ext_resource path="res://textures/temp_textures/5672_mars_6k_color(1).jpg" type="Texture" id=1]
[ext_resource path="res://PlanetGen.cs" type="Script" id=2]
[ext_resource path="res://textures/temp_textures/5672_mars_6k_normal(2).jpg" type="Texture" id=3]
[ext_resource path="res://Mars.cs" type="Script" id=4]
[ext_resource path="res://textures/temp_textures/20889-starry-sky-stars-black-glitter-4k@2x.png" type="Texture" id=5]
[ext_resource path="res://HTTPRequestTest.tscn" type="PackedScene" id=6]
[ext_resource path="res://MarsMesh.cs" type="Script" id=7]
[ext_resource path="res://PlanetGen.tscn" type="PackedScene" id=8]
[ext_resource path="res://assets/perlinnose.png" type="Texture" id=9]
[ext_resource path="res://assets/planetmars.glb" type="PackedScene" id=10]

[sub_resource type="PhysicsMaterial" id=12]
friction = 0.2

[sub_resource type="SpatialMaterial" id=5]
flags_unshaded = true
params_cull_mode = 1
params_grow = true
params_grow_amount = 0.877
albedo_color = Color( 1, 0.627451, 0.298039, 1 )
distance_fade_mode = 1
distance_fade_min_distance = 5.0
distance_fade_max_distance = 50.0

[sub_resource type="SpatialMaterial" id=4]
next_pass = SubResource( 5 )
flags_unshaded = true
params_cull_mode = 1
params_grow = true
params_grow_amount = 0.213
albedo_color = Color( 0.243137, 0.109804, 0.027451, 1 )
distance_fade_mode = 1
distance_fade_min_distance = 3.0
distance_fade_max_distance = 50.0

[sub_resource type="SpatialMaterial" id=1]
next_pass = SubResource( 4 )
albedo_texture = ExtResource( 1 )
metallic = 0.36
normal_enabled = true
normal_scale = 1.0
normal_texture = ExtResource( 3 )
depth_enabled = true
depth_scale = 0.05
depth_deep_parallax = false
depth_flip_tangent = false
depth_flip_binormal = false

[sub_resource type="SphereShape" id=2]
radius = 2.7

[sub_resource type="SphereShape" id=8]
radius = 10.097

[sub_resource type="PanoramaSky" id=6]
panorama = ExtResource( 5 )

[sub_resource type="Environment" id=7]
background_mode = 2
background_sky = SubResource( 6 )
background_sky_custom_fov = 121.5
background_energy = 0.3

[sub_resource type="SphereShape" id=11]
radius = 2.681

[sub_resource type="SphereMesh" id=13]
radius = 2.8
height = 5.6

[sub_resource type="VisualShaderNodeScalarConstant" id=19]
constant = 0.01

[sub_resource type="VisualShaderNodeScalarOp" id=20]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=22]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id=23]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeTexture" id=24]
output_port_for_preview = 0
texture = ExtResource( 9 )

[sub_resource type="VisualShaderNodeScalarFunc" id=30]
output_port_for_preview = 0
function = 5

[sub_resource type="VisualShaderNodeScalarOp" id=31]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeColorConstant" id=32]
constant = Color( 0.742188, 0.379338, 0.220337, 1 )

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
function = 26

[sub_resource type="VisualShaderNodeScalarOp" id=33]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=34]
output_port_for_preview = 0
function = 14

[sub_resource type="VisualShaderNodeScalarConstant" id=18]
output_port_for_preview = 0
constant = 1.2

[sub_resource type="VisualShaderNodeScalarOp" id=27]
output_port_for_preview = 0
operator = 3

[sub_resource type="VisualShaderNodeInput" id=28]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=29]
input_name = "uv"

[sub_resource type="VisualShader" id=16]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform sampler2D tex_frg_15;



void vertex() {
// Output:0

}

void fragment() {
// Color:19
	vec3 n_out19p0 = vec3(0.742188, 0.379338, 0.220337);
	float n_out19p1 = 1.000000;

// Scalar:4
	float n_out4p0 = 1.200000;

// ScalarFunc:2
	float n_out2p0 = log2(n_out4p0);

// Input:9
	vec3 n_out9p0 = vec3(UV, 0.0);

// Input:8
	float n_out8p0 = TIME;

// Scalar:10
	float n_out10p0 = 0.010000;

// ScalarOp:11
	float n_out11p0 = n_out8p0 * n_out10p0;

// ScalarOp:13
	float n_in13p1 = 2.00000;
	float n_out13p0 = n_out11p0 / n_in13p1;

// VectorOp:14
	vec3 n_out14p0 = n_out9p0 - vec3(n_out13p0);

// Texture:15
	vec4 tex_frg_15_read = texture(tex_frg_15, n_out14p0.xy);
	vec3 n_out15p0 = tex_frg_15_read.rgb;
	float n_out15p1 = tex_frg_15_read.a;

// ScalarOp:7
	float n_out7p0 = n_out2p0 / dot(n_out15p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarFunc:21
	float n_out21p0 = floor(n_out7p0);

// ScalarOp:18
	float n_in18p1 = 1.00000;
	float n_out18p0 = n_out21p0 + n_in18p1;

// ScalarFunc:17
	float n_out17p0 = atan(n_out18p0);

// ScalarOp:20
	float n_in20p1 = 0.10000;
	float n_out20p0 = n_out17p0 * n_in20p1;

// Output:0
	ALBEDO = n_out19p0;
	ALPHA = n_out20p0;

}

void light() {
// Output:0

}
"
nodes/fragment/0/position = Vector2( 1240, 40 )
nodes/fragment/2/node = SubResource( 14 )
nodes/fragment/2/position = Vector2( -80, 120 )
nodes/fragment/4/node = SubResource( 18 )
nodes/fragment/4/position = Vector2( -340, 100 )
nodes/fragment/7/node = SubResource( 27 )
nodes/fragment/7/position = Vector2( 200, 140 )
nodes/fragment/8/node = SubResource( 28 )
nodes/fragment/8/position = Vector2( -1140, 420 )
nodes/fragment/9/node = SubResource( 29 )
nodes/fragment/9/position = Vector2( -560, 260 )
nodes/fragment/10/node = SubResource( 19 )
nodes/fragment/10/position = Vector2( -1140, 520 )
nodes/fragment/11/node = SubResource( 20 )
nodes/fragment/11/position = Vector2( -800, 460 )
nodes/fragment/13/node = SubResource( 22 )
nodes/fragment/13/position = Vector2( -500, 500 )
nodes/fragment/14/node = SubResource( 23 )
nodes/fragment/14/position = Vector2( -220, 420 )
nodes/fragment/15/node = SubResource( 24 )
nodes/fragment/15/position = Vector2( 20, 240 )
nodes/fragment/17/node = SubResource( 30 )
nodes/fragment/17/position = Vector2( 820, 200 )
nodes/fragment/18/node = SubResource( 31 )
nodes/fragment/18/position = Vector2( 640, 260 )
nodes/fragment/19/node = SubResource( 32 )
nodes/fragment/19/position = Vector2( 580, 20 )
nodes/fragment/20/node = SubResource( 33 )
nodes/fragment/20/position = Vector2( 1020, 100 )
nodes/fragment/21/node = SubResource( 34 )
nodes/fragment/21/position = Vector2( 400, 280 )
nodes/fragment/connections = PoolIntArray( 2, 0, 7, 0, 10, 0, 11, 1, 8, 0, 11, 0, 9, 0, 14, 0, 14, 0, 15, 0, 4, 0, 2, 0, 19, 0, 0, 0, 13, 0, 14, 1, 11, 0, 13, 0, 20, 0, 0, 1, 15, 0, 7, 1, 17, 0, 20, 0, 7, 0, 21, 0, 21, 0, 18, 0, 18, 0, 17, 0 )

[sub_resource type="ShaderMaterial" id=17]
shader = SubResource( 16 )

[sub_resource type="BoxShape" id=35]
extents = Vector3( 2000, 2000, 2000 )

[node name="Spatial" type="Spatial"]
script = ExtResource( 2 )

[node name="Mars" type="StaticBody" parent="."]
visible = false
physics_material_override = SubResource( 12 )
script = ExtResource( 4 )
__meta__ = {
"_edit_group_": true
}

[node name="CSGSphere" type="CSGSphere" parent="Mars"]
radius = 2.68
radial_segments = 64
rings = 32
material = SubResource( 1 )
script = ExtResource( 7 )

[node name="Area" type="Area" parent="Mars/CSGSphere"]

[node name="CollisionShape" type="CollisionShape" parent="Mars/CSGSphere/Area"]
shape = SubResource( 2 )

[node name="GravityField" type="Area" parent="Mars"]
space_override = 3
gravity_point = true
gravity_vec = Vector3( 0, 0, 0 )
gravity = 10.0

[node name="GravityFieldShape" type="CollisionShape" parent="Mars/GravityField"]
shape = SubResource( 8 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="Mars"]
environment = SubResource( 7 )

[node name="OmniLight" type="OmniLight" parent="Mars"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.286823, 0.497948, 4.9375 )

[node name="OmniLight2" type="DirectionalLight" parent="Mars"]
transform = Transform( -1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, -0.286823, 0.497948, -9.67941 )
light_energy = 0.1

[node name="CollisionShape" type="CollisionShape" parent="Mars"]
shape = SubResource( 11 )

[node name="Snapback" type="Tween" parent="Mars"]

[node name="MeshInstance" type="MeshInstance" parent="Mars"]
mesh = SubResource( 13 )
material/0 = SubResource( 17 )

[node name="MainCam" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 28.8493 )
current = true

[node name="OmniLight" type="DirectionalLight" parent="MainCam"]
light_color = Color( 1, 0.854902, 0.768627, 1 )
light_energy = 0.61

[node name="PlanetGen" parent="." instance=ExtResource( 8 )]
visible = false

[node name="Area" type="Area" parent="."]
space_override = 2
gravity_point = true
gravity = 0.0

[node name="CollisionShape" type="CollisionShape" parent="Area"]
shape = SubResource( 35 )

[node name="CanvasLayer" parent="." instance=ExtResource( 6 )]

[node name="planetmarsmodel" parent="." instance=ExtResource( 10 )]

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, -0.707107, -0.707107, 0, 0.707107, -0.707107, 0, 33, 77 )

[connection signal="area_entered" from="Mars/CSGSphere/Area" to="Mars/CSGSphere" method="_on_Area_area_entered"]
[connection signal="input_event" from="Mars/CSGSphere/Area" to="Mars/CSGSphere" method="_on_Area_input_event"]
[connection signal="mouse_entered" from="Mars/CSGSphere/Area" to="Mars" method="_on_Area_mouse_entered"]
[connection signal="mouse_exited" from="Mars/CSGSphere/Area" to="Mars" method="_on_Area_mouse_exited"]
